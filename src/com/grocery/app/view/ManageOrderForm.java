/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package com.grocery.app.view;

import com.grocery.app.controller.CustomerController;
import com.grocery.app.controller.ItemController;
import com.grocery.app.controller.OrderController;
import com.grocery.app.controller.OrderDetailController;
import com.grocery.app.controller.impl.CustomerControllerImpl;
import com.grocery.app.controller.impl.ItemControllerImpl;
import com.grocery.app.controller.impl.OrderControllerImpl;
import com.grocery.app.controller.impl.OrderDetailControllerImpl;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import com.grocery.app.model.Customer;
import com.grocery.app.model.Item;
import com.grocery.app.model.Order;
import com.grocery.app.model.OrderDetail;

/**
 *
 * @author Tharindu
 */
public class ManageOrderForm extends javax.swing.JDialog {
    private final CustomerController customerController=new CustomerControllerImpl();
    private final ItemController itemController=new ItemControllerImpl();
    private final OrderController orderController=new OrderControllerImpl();
    private final OrderDetailController orderDetailController=new OrderDetailControllerImpl();
    
    /**
     * Creates new form ManageItemForm
     */
    private String custId="";
    private DefaultTableModel model;
    private DefaultTableModel model1;
    private DefaultTableModel orderDTM;
    private DefaultTableModel orderDetailDTM;
    private DefaultTableModel order1DTM;
    private DefaultTableModel orderDetail1DTM;
    int mouseX;
    int mouseY;
    private String oid="";
    public ManageOrderForm(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        try {
            initComponents();
            setLocationRelativeTo(null);
            model1=(DefaultTableModel) itemTable1.getModel();
            orderDTM=(DefaultTableModel) orderTbl.getModel();
            orderDetailDTM=(DefaultTableModel) orderDetailTbl.getModel();
            order1DTM=(DefaultTableModel) orderTbl1.getModel();
            orderDetail1DTM=(DefaultTableModel) orderDetailTbl1.getModel();
            fillCodeCombo();
            fillOrderTbl();
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        orderIdText = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        custIDTxt = new javax.swing.JTextField();
        nameText = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        codeCombo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        descriptionText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        unitPriceText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        qtyOnHandText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        qtyText = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemTable = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        amountText = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        orderDetailTbl = new javax.swing.JTable();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        orderTbl = new javax.swing.JTable();
        jLabel22 = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        oidTxt = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        orderTbl1 = new javax.swing.JTable();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        orderDetailTbl1 = new javax.swing.JTable();
        exiitBt = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        orderIdText1 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        custIDTxt1 = new javax.swing.JTextField();
        nameText1 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        codeCombo1 = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        descriptionText1 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        unitPriceText1 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        qtyOnHandText1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        qtyText1 = new javax.swing.JTextField();
        addButton1 = new javax.swing.JButton();
        removeButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        itemTable1 = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        amountText1 = new javax.swing.JTextField();
        updateBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();
        exitButton1 = new javax.swing.JButton();
        enterBtn = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        dateLbl = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(0, 102, 102), new java.awt.Color(0, 102, 102)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Orders");
        jLabel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel1MouseDragged(evt);
            }
        });
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Order ID :");

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customer Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 102, 102))); // NOI18N

        jLabel3.setText("Customer ID :");

        jLabel4.setText("Customer Name :");

        custIDTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custIDTxtActionPerformed(evt);
            }
        });

        nameText.setEditable(false);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(custIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(custIDTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 102, 102))); // NOI18N

        jLabel5.setText("Item Code :");

        codeCombo.setEditable(true);
        codeCombo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                codeComboItemStateChanged(evt);
            }
        });
        codeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeComboActionPerformed(evt);
            }
        });

        jLabel6.setText("Description :");

        descriptionText.setEditable(false);

        jLabel7.setText("Unit Price :");

        unitPriceText.setEditable(false);

        jLabel8.setText("QTY on Hand :");

        qtyOnHandText.setEditable(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qtyOnHandText, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(unitPriceText)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(codeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(unitPriceText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(descriptionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(qtyOnHandText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel9.setText("QTY :");

        qtyText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyTextActionPerformed(evt);
            }
        });

        addButton.setText("Add");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        removeButton.setText("Remove");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        itemTable.setFont(new java.awt.Font("DejaVu Serif", 0, 12)); // NOI18N
        itemTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Description", "Unit Price", "Qty", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(itemTable);

        jLabel10.setText("Total Amount :");

        amountText.setEditable(false);
        amountText.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        amountText.setText("0.0");

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jButton5.setText("Clear");

        exitButton.setText("Exit");
        exitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(orderIdText, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeButton))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amountText, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton)
                        .addGap(1, 1, 1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(orderIdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(qtyText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton)
                    .addComponent(removeButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(amountText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveButton)
                    .addComponent(jButton5)
                    .addComponent(exitButton))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Place Order", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        orderDetailTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemCode", "Description", "Unit Price", "QTY"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(orderDetailTbl);
        if (orderDetailTbl.getColumnModel().getColumnCount() > 0) {
            orderDetailTbl.getColumnModel().getColumn(0).setResizable(false);
            orderDetailTbl.getColumnModel().getColumn(1).setResizable(false);
            orderDetailTbl.getColumnModel().getColumn(2).setResizable(false);
            orderDetailTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 23, 351, 264));

        jLabel21.setForeground(new java.awt.Color(0, 102, 102));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Order Table");
        jPanel4.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 0, 245, 20));

        orderTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Customer", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderTbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderTblMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(orderTbl);
        if (orderTbl.getColumnModel().getColumnCount() > 0) {
            orderTbl.getColumnModel().getColumn(0).setResizable(false);
            orderTbl.getColumnModel().getColumn(1).setResizable(false);
            orderTbl.getColumnModel().getColumn(2).setResizable(false);
        }

        jPanel4.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 24, 245, 262));

        jLabel22.setForeground(new java.awt.Color(0, 102, 102));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Order Details Table");
        jPanel4.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 0, 351, 20));

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        jPanel4.add(deleteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 293, -1, -1));

        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });
        jPanel4.add(exitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(589, 293, -1, -1));

        jTabbedPane1.addTab("Delete Order", jPanel4);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        oidTxt.setToolTipText("Search by OrderID");
        oidTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oidTxtActionPerformed(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        orderTbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Customer", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        orderTbl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderTbl1MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(orderTbl1);
        if (orderTbl1.getColumnModel().getColumnCount() > 0) {
            orderTbl1.getColumnModel().getColumn(0).setResizable(false);
            orderTbl1.getColumnModel().getColumn(1).setResizable(false);
            orderTbl1.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel23.setForeground(new java.awt.Color(0, 102, 102));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Order Table");

        jLabel24.setForeground(new java.awt.Color(0, 102, 102));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Order Details Table");

        orderDetailTbl1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ItemCode", "Description", "Unit Price", "QTY"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(orderDetailTbl1);
        if (orderDetailTbl1.getColumnModel().getColumnCount() > 0) {
            orderDetailTbl1.getColumnModel().getColumn(0).setResizable(false);
            orderDetailTbl1.getColumnModel().getColumn(1).setResizable(false);
            orderDetailTbl1.getColumnModel().getColumn(2).setResizable(false);
            orderDetailTbl1.getColumnModel().getColumn(3).setResizable(false);
        }

        exiitBt.setText("Exit");
        exiitBt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exiitBtActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(182, 182, 182)
                .addComponent(oidTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchBtn)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(exiitBt))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(2, 21, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(27, 27, 27)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 20, Short.MAX_VALUE)))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oidTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 233, Short.MAX_VALUE)
                .addComponent(exiitBt)
                .addContainerGap())
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel5Layout.createSequentialGroup()
                    .addGap(0, 61, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addContainerGap(40, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Search Order", jPanel5);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jLabel11.setText("Order ID :");

        orderIdText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderIdText1ActionPerformed(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Customer Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 102, 102))); // NOI18N

        jLabel12.setText("Customer ID :");

        jLabel13.setText("Customer Name :");

        custIDTxt1.setEditable(false);
        custIDTxt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custIDTxt1ActionPerformed(evt);
            }
        });

        nameText1.setEditable(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(custIDTxt1)
                    .addComponent(nameText1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 4, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(custIDTxt1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(nameText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item Info", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 102, 102))); // NOI18N

        jLabel14.setText("Item Code :");

        codeCombo1.setEditable(true);
        codeCombo1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                codeCombo1ItemStateChanged(evt);
            }
        });

        jLabel15.setText("Description :");

        descriptionText1.setEditable(false);

        jLabel16.setText("Unit Price :");

        unitPriceText1.setEditable(false);

        jLabel17.setText("QTY on Hand :");

        qtyOnHandText1.setEditable(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(codeCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descriptionText1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel17))
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(unitPriceText1)
                    .addComponent(qtyOnHandText1, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 4, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(codeCombo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(unitPriceText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(descriptionText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(qtyOnHandText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabel18.setText("QTY :");

        qtyText1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyText1ActionPerformed(evt);
            }
        });

        addButton1.setText("Add");
        addButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButton1ActionPerformed(evt);
            }
        });

        removeButton1.setText("Remove");
        removeButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButton1ActionPerformed(evt);
            }
        });

        itemTable1.setFont(new java.awt.Font("DejaVu Serif", 0, 12)); // NOI18N
        itemTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Description", "Unit Price", "Qty", "Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        itemTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(itemTable1);

        jLabel19.setText("Total Amount :");

        amountText1.setEditable(false);
        amountText1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        amountText1.setText("0.0");

        updateBtn.setText("Update");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Clear");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        exitButton1.setText("Exit");
        exitButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitButton1ActionPerformed(evt);
            }
        });

        enterBtn.setText("Enter");
        enterBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterBtnActionPerformed(evt);
            }
        });

        jLabel20.setText("Date :");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(qtyText1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeButton1))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(amountText1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(exitButton1)
                        .addGap(1, 1, 1))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(orderIdText1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(enterBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(orderIdText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(enterBtn)
                        .addComponent(jLabel20)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(qtyText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addButton1)
                    .addComponent(removeButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(amountText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updateBtn)
                    .addComponent(cancelBtn)
                    .addComponent(exitButton1))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Update Order", jPanel3);

        jButton1.setText("View Orders");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(571, 571, 571)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jButton1))
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void custIDTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custIDTxtActionPerformed
        try {
            String custId = custIDTxt.getText();
            if (!"".equals(custId)) {
                this.custId=custId;
                Customer customer = customerController.searchCustomer(custId);
                if (customer != null) {
                    nameText.setText(customer.getName());
                } else {
                    JOptionPane.showMessageDialog(this, "Customer not found !");
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_custIDTxtActionPerformed
    
    private void codeComboItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_codeComboItemStateChanged
        try {
            String selectedItem = codeCombo.getSelectedItem().toString();
            if (selectedItem != null) {
                Item item = itemController.searchItem(selectedItem);
                if (item != null) {
                    descriptionText.setText(item.getDescription());
                    qtyOnHandText.setText(Integer.toString(item.getQty()));
                    unitPriceText.setText(Double.toString(item.getUnitPrice()));
                } else {
                    JOptionPane.showMessageDialog(this, "Item not found !");
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_codeComboItemStateChanged
    
    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        Order order = new Order(orderIdText.getText(),custIDTxt.getText(), new Date());
        ArrayList<OrderDetail> orderDetailList = new ArrayList<>();
        int updateQty=0;
        for (int i = 0; i < itemTable.getRowCount(); i++) {
            try {
                OrderDetail orderDetail = new OrderDetail(orderIdText.getText(), itemTable.getValueAt(i, 0).toString(), Integer.parseInt(itemTable.getValueAt(i, 3).toString()), Double.parseDouble(itemTable.getValueAt(i, 2).toString()));
                orderDetailList.add(orderDetail);
                
                String icode=itemTable.getValueAt(i, 0).toString();
                int saleqty=Integer.parseInt(itemTable.getValueAt(i, 3).toString());
                int qtyinStock=itemController.searchItem(icode).getQty();
                updateQty+=itemController.updateItemQTY(icode,qtyinStock-saleqty );
                
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            boolean orderAdded = orderController.addOrder(order);
            boolean orderDetailAdded = orderDetailController.addOrderDetail(orderDetailList);
            
            if (orderAdded && orderDetailAdded && updateQty==itemTable.getRowCount()) {
                JOptionPane.showMessageDialog(this, "Order Saved Successfully !");
                model.setRowCount(0);
                String orderId = orderIdText.getText();
                orderIdText.setText("");
                amountText.setText("0.0");
                dispose();
                ManagePaymentForm managePaymentForm = new ManagePaymentForm(null, true);
                managePaymentForm.setOrderId(orderId);
                managePaymentForm.doClickOnEnter();
                managePaymentForm.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "Order Saved Fail !");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_saveButtonActionPerformed
    
    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        if (itemTable.getSelectedRow() != -1) {
            double amount = Double.parseDouble(itemTable.getValueAt(itemTable.getSelectedRow(), 4).toString());
            double totalAmount = Double.parseDouble(amountText.getText());
            totalAmount -= amount;
            amountText.setText(Double.toString(totalAmount));
            model.removeRow(itemTable.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row !");
        }
    }//GEN-LAST:event_removeButtonActionPerformed
    
    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        if (Integer.parseInt(qtyText.getText()) <= 0) {
            JOptionPane.showMessageDialog(this, "Invalid qty !");
            qtyText.setText("");
        } else if (Integer.parseInt(qtyOnHandText.getText()) < Integer.parseInt(qtyText.getText())) {
            JOptionPane.showMessageDialog(this, "Qty on hand is not enough !");
            qtyText.setText("");
        } else {
            boolean isExist = false;
            int row = -1;
            for (int i = 0; i < itemTable.getRowCount(); i++) {
                if (codeCombo.getSelectedItem().toString().equals(itemTable.getValueAt(i, 0).toString())) {
                    isExist = true;
                    row = i;
                    break;
                }
            }
            if (!isExist) {
                model = (DefaultTableModel) itemTable.getModel();
                double amount = Integer.parseInt(qtyText.getText()) * Double.parseDouble(unitPriceText.getText());
                Object[] rowData = {codeCombo.getSelectedItem().toString(), descriptionText.getText(), unitPriceText.getText(), qtyText.getText(), amount};
                model.addRow(rowData);
                double totalAmount = Double.parseDouble(amountText.getText()) + amount;
                amountText.setText(Double.toString(totalAmount));
            } else {
                String[] options = {"Add", "Replace","Cancel"};
                int showOptionDialog = JOptionPane.showOptionDialog(this, "Item is already existing. Do you want to add or replace qty ?", "Warning", JOptionPane.CANCEL_OPTION, JOptionPane.WARNING_MESSAGE, new ImageIcon("./src/thogakade/images/1.png"), options, options[0]);
                if (showOptionDialog == 0) {
                    int newQty = Integer.parseInt(qtyText.getText());
                    int qty = Integer.parseInt(itemTable.getValueAt(row, 3).toString());
                    newQty += qty;
                    itemTable.setValueAt(newQty, row, 3);
                    double amount = Double.parseDouble(itemTable.getValueAt(row, 4).toString());
                    double totalAmount = Double.parseDouble(amountText.getText());
                    totalAmount -= amount;
                    double unitPrice = Double.parseDouble(itemTable.getValueAt(row, 2).toString());
                    amount = unitPrice * newQty;
                    itemTable.setValueAt(amount, row, 4);
                    totalAmount += amount;
                    amountText.setText(Double.toString(totalAmount));
                } else if (showOptionDialog == 1) {
                    itemTable.setValueAt(qtyText.getText(), row, 3);
                    int qty = Integer.parseInt(itemTable.getValueAt(row, 3).toString());
                    double amount = Double.parseDouble(itemTable.getValueAt(row, 4).toString());
                    double totalAmount = Double.parseDouble(amountText.getText());
                    totalAmount -= amount;
                    double unitPrice = Double.parseDouble(itemTable.getValueAt(row, 2).toString());
                    amount = unitPrice * qty;
                    itemTable.setValueAt(amount, row, 4);
                    totalAmount += amount;
                    amountText.setText(Double.toString(totalAmount));
                }
            }
        }
    }//GEN-LAST:event_addButtonActionPerformed
    
    private void qtyTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyTextActionPerformed
        addButton.doClick();
    }//GEN-LAST:event_qtyTextActionPerformed
    
    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButtonActionPerformed
        dispose();
    }//GEN-LAST:event_exitButtonActionPerformed
    
    private void jLabel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseDragged
        int x=evt.getXOnScreen();
        int y=evt.getYOnScreen();
        
        this.setLocation(x-mouseX, y-mouseY);
    }//GEN-LAST:event_jLabel1MouseDragged
    
    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        mouseX=evt.getX();
        mouseY=evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed
    
    private void custIDTxt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custIDTxt1ActionPerformed
        try {
            custIDTxt1.setEditable(false);
            String custId = custIDTxt1.getText();
            if (!"".equals(custId)) {
                this.custId=custId;
                Customer customer = customerController.searchCustomer(custId);
                if (customer != null) {
                    nameText1.setText(customer.getName());
                } else {
                    JOptionPane.showMessageDialog(this, "Customer not found !");
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_custIDTxt1ActionPerformed
    
    private void codeCombo1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_codeCombo1ItemStateChanged
        try {
            String selectedItem = codeCombo1.getSelectedItem().toString();
            if (selectedItem != null) {
                Item item = itemController.searchItem(selectedItem);
                if (item != null) {
                    descriptionText1.setText(item.getDescription());
                    qtyOnHandText1.setText(Integer.toString(item.getQty()));
                    unitPriceText1.setText(Double.toString(item.getUnitPrice()));
                } else {
                    JOptionPane.showMessageDialog(this, "Item not found !");
                }
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_codeCombo1ItemStateChanged
    
    private void qtyText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyText1ActionPerformed
        addButton1.doClick();
    }//GEN-LAST:event_qtyText1ActionPerformed
    
    private void addButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButton1ActionPerformed
        if(addButton1.getText().equals("Add")){
            if (Integer.parseInt(qtyText1.getText()) <= 0) {
                JOptionPane.showMessageDialog(this, "Invalid qty !");
                qtyText1.setText("");
            } else if (Integer.parseInt(qtyOnHandText1.getText()) < Integer.parseInt(qtyText1.getText())) {
                JOptionPane.showMessageDialog(this, "Qty on hand is not enough !");
                qtyText1.setText("");
            } else {
                boolean isExist = false;
                int row = -1;
                for (int i = 0; i < itemTable1.getRowCount(); i++) {
                    if (codeCombo1.getSelectedItem().toString().equals(itemTable1.getValueAt(i, 0).toString())) {
                        isExist = true;
                        row = i;
                        break;
                    }
                }
                if (!isExist) {
                    double amount = Integer.parseInt(qtyText1.getText()) * Double.parseDouble(unitPriceText1.getText());
                    Object[] rowData = {codeCombo1.getSelectedItem().toString(), descriptionText1.getText(), unitPriceText1.getText(), qtyText1.getText(), amount};
                    model1.addRow(rowData);
                    double totalAmount = Double.parseDouble(amountText1.getText()) + amount;
                    amountText1.setText(Double.toString(totalAmount));
                } else {
                    String[] options = {"Add", "Replace","Cancel"};
                    int showOptionDialog = JOptionPane.showOptionDialog(this, "Item is already existing. Do you want to add or replace qty ?", "Warning", JOptionPane.CANCEL_OPTION, JOptionPane.WARNING_MESSAGE, new ImageIcon(), options, options[0]);
                    if (showOptionDialog == 0) {
                        int newQty = Integer.parseInt(qtyText1.getText());
                        int qty = Integer.parseInt(itemTable1.getValueAt(row, 3).toString());
                        newQty += qty;
                        itemTable1.setValueAt(newQty, row, 3);
                        double amount = Double.parseDouble(itemTable1.getValueAt(row, 4).toString());
                        double totalAmount = Double.parseDouble(amountText1.getText());
                        totalAmount -= amount;
                        double unitPrice = Double.parseDouble(itemTable1.getValueAt(row, 2).toString());
                        amount = unitPrice * newQty;
                        itemTable1.setValueAt(amount, row, 4);
                        totalAmount += amount;
                        amountText1.setText(Double.toString(totalAmount));
                    } else if (showOptionDialog == 1) {
                        itemTable1.setValueAt(qtyText1.getText(), row, 3);
                        int qty = Integer.parseInt(itemTable1.getValueAt(row, 3).toString());
                        double amount = Double.parseDouble(itemTable1.getValueAt(row, 4).toString());
                        double totalAmount = Double.parseDouble(amountText1.getText());
                        totalAmount -= amount;
                        double unitPrice = Double.parseDouble(itemTable1.getValueAt(row, 2).toString());
                        amount = unitPrice * qty;
                        itemTable1.setValueAt(amount, row, 4);
                        totalAmount += amount;
                        amountText1.setText(Double.toString(totalAmount));
                    }
                }
            }
        }else{
            double up=Double.parseDouble(unitPriceText1.getText());
            itemTable1.setValueAt(up, itemTable1.getSelectedRow(), 2);
            int qty=Integer.parseInt(qtyText1.getText());
            itemTable1.setValueAt(qty, itemTable1.getSelectedRow(), 3);
            double currentAmount=Double.parseDouble(itemTable1.getValueAt(itemTable1.getSelectedRow(), 4).toString());
            itemTable1.setValueAt(qty*up, itemTable1.getSelectedRow(), 4);
            double curTotAmount=Double.parseDouble(amountText1.getText());
            amountText1.setText(Double.toString((curTotAmount-currentAmount)+(qty*up)));
            codeCombo1.setEnabled(true);
            addButton1.setText("Add");
            qtyText1.setText("");
        }
    }//GEN-LAST:event_addButton1ActionPerformed
    
    private void removeButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButton1ActionPerformed
        if (itemTable1.getSelectedRow() != -1) {
            double amount = Double.parseDouble(itemTable1.getValueAt(itemTable1.getSelectedRow(), 4).toString());
            double totalAmount = Double.parseDouble(amountText1.getText());
            totalAmount -= amount;
            amountText1.setText(Double.toString(totalAmount));
            model1.removeRow(itemTable1.getSelectedRow());
            addButton1.setText("Add");
            qtyText1.setText("");
            codeCombo1.setSelectedIndex(0);
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row !");
        }
    }//GEN-LAST:event_removeButton1ActionPerformed
    
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        try {
            boolean isUpdate = orderController.updateOrder(new Order(orderIdText1.getText(), custIDTxt1.getText(), new SimpleDateFormat("yyyy-MM-dd").parse(dateLbl.getText())));
            ArrayList<OrderDetail> searchOrderDetail = orderDetailController.searchOrderDetail(orderIdText1.getText());
            int updateItemQTY=0;
            for (OrderDetail searchOrderDetail1 : searchOrderDetail) {
                int qytinOrder=searchOrderDetail1.getQty();
                int currectQty=itemController.searchItem(searchOrderDetail1.getItemCode()).getQty();
                updateItemQTY+=itemController.updateItemQTY(searchOrderDetail1.getItemCode(), currectQty+qytinOrder);
            }
            
            boolean updateOrder = false;
            int updateQTy=0;
            if(updateItemQTY==searchOrderDetail.size()){
                boolean isDelete = orderDetailController.deleteOrderDetail(orderIdText1.getText());
                if (isDelete) {
                    ArrayList<OrderDetail> odList = new ArrayList<>();
                    for (int i = 0; i < itemTable1.getRowCount(); i++) {
                        odList.add(new OrderDetail(orderIdText1.getText(), itemTable1.getValueAt(i, 0).toString(), Integer.parseInt(itemTable1.getValueAt(i, 3).toString()), Double.parseDouble(itemTable1.getValueAt(i, 2).toString())));
                        int saleqty=Integer.parseInt(itemTable1.getValueAt(i, 3).toString());
                        int qtyinStock=itemController.searchItem(itemTable1.getValueAt(i, 0).toString()).getQty();
                        updateQTy+=itemController.updateItemQTY(itemTable1.getValueAt(i, 0).toString(), qtyinStock-saleqty);
                    }
                    updateOrder = orderDetailController.addOrderDetail(odList);
                }
            }
            
            if(isUpdate && updateOrder && updateQTy==itemTable1.getRowCount()){
                JOptionPane.showMessageDialog(this, "Order Updated Successfully...");
                orderIdText1.setText("");
                custIDTxt1.setText("");
                nameText1.setText("");
                qtyText1.setText("");
                model1.setRowCount(0);
                amountText1.setText("0.0");
                dateLbl.setText("");
            }else{
                JOptionPane.showMessageDialog(this, "Order Update Fail...");
            }
        } catch (ClassNotFoundException | SQLException | ParseException ex) {
            Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateBtnActionPerformed
    
    private void exitButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_exitButton1ActionPerformed
    
    private void enterBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterBtnActionPerformed
        try {
            String oid=orderIdText1.getText();
            String custId=custIDTxt1.getText();
            Order order = orderController.searchOrder(orderIdText1.getText());
            this.custId=custId;
            if(order!=null){
                if (model1.getRowCount()==0 || !this.oid.equals(oid)) {
                    this.oid=oid;
                    this.custId=order.getCustomerId();
                    dateLbl.setText(order.getDate().toString());
                    custIDTxt1.setText(order.getCustomerId());
                    nameText1.setText(customerController.searchCustomer(order.getCustomerId()).getName());
                    ArrayList<OrderDetail> searchOrderDetail = orderDetailController.searchOrderDetail(order.getId());
                    double totAmount = 0;
                    model1.setRowCount(0);
                    for (OrderDetail searchOrderDetail1 : searchOrderDetail) {
                        String icode = searchOrderDetail1.getItemCode();
                        String descip = itemController.searchItem(icode).getDescription();
                        double up = searchOrderDetail1.getUnitPrice();
                        int qty = searchOrderDetail1.getQty();
                        double amount = qty * up;
                        totAmount += amount;
                        model1.addRow(new Object[]{icode, descip, up, qty, amount});
                        amountText1.setText(Double.toString(totAmount));
                    }
                }
            }else{
                JOptionPane.showMessageDialog(this, "Order not found !");
                orderIdText1.requestFocus();
                custIDTxt1.setText("");
                nameText1.setText("");
                dateLbl.setText("");
                qtyText1.setText("");
                model1.setRowCount(0);
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_enterBtnActionPerformed
    
    private void codeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codeComboActionPerformed
    
    private void orderIdText1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderIdText1ActionPerformed
        enterBtn.doClick();
    }//GEN-LAST:event_orderIdText1ActionPerformed
    
    private void itemTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemTable1MouseClicked
        if(itemTable1.getSelectedRow()!=-1){
            addButton1.setText("Change");
            codeCombo1.setSelectedItem(itemTable1.getValueAt(itemTable1.getSelectedRow(), 0));
            codeCombo1.setEnabled(false);
            qtyText1.setText(itemTable1.getValueAt(itemTable1.getSelectedRow(), 3).toString());
            qtyText1.requestFocus();
        }  
    }//GEN-LAST:event_itemTable1MouseClicked
    
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        orderIdText1.setText("");
        custIDTxt1.setText("");
        nameText1.setText("");
        qtyText1.setText("");
        model1.setRowCount(0);
        amountText1.setText("0.0");
        dateLbl.setText("");
        
    }//GEN-LAST:event_cancelBtnActionPerformed
    
    private void orderTblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTblMouseClicked
        orderDetailDTM.setRowCount(0);
        if(orderTbl.getSelectedRow()!=-1){
            try {
                String orderID=orderTbl.getValueAt(orderTbl.getSelectedRow(), 0).toString();
                ArrayList<OrderDetail> searchOrderDetail = orderDetailController.searchOrderDetail(orderID);
                for (OrderDetail searchOrderDetail1 : searchOrderDetail) {
                    String icode=searchOrderDetail1.getItemCode();
                    String description = itemController.searchItem(icode).getDescription();
                    orderDetailDTM.addRow(new Object[]{icode,description,searchOrderDetail1.getUnitPrice(),searchOrderDetail1.getQty()});
                }
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_orderTblMouseClicked
    
    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        try {
            String oid=orderTbl.getValueAt(orderTbl.getSelectedRow(), 0).toString();
            
            boolean isDelete = orderController.deleteOrder(orderTbl.getValueAt(orderTbl.getSelectedRow(), 0).toString());
            if(isDelete){
                JOptionPane.showMessageDialog(this, "Order Deleted Successfully...");
                
                fillOrderTbl();
                orderDetailDTM.setRowCount(0);
                
            }else{
                JOptionPane.showMessageDialog(this, "Order Delete Fail...");
                
            }
            
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed
    
    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        dispose();
    }//GEN-LAST:event_exitBtnActionPerformed
    
    private void orderTbl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderTbl1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_orderTbl1MouseClicked
    
    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        order1DTM.setRowCount(0);
        orderDetail1DTM.setRowCount(0);
        String oid=oidTxt.getText();
        try {
            Order order = orderController.searchOrder(oid);
            if(order!=null){
                String name = customerController.searchCustomer(order.getCustomerId()).getName();
                ArrayList<OrderDetail> OrderDetailList = orderDetailController.searchOrderDetail(oid);
                for (OrderDetail OrderDetailList1 : OrderDetailList) {
                    String icode=OrderDetailList1.getItemCode();
                    String description = itemController.searchItem(icode).getDescription();
                    orderDetail1DTM.addRow(new Object[]{icode,description,OrderDetailList1.getUnitPrice(),OrderDetailList1.getQty()} );
                }
                order1DTM.addRow(new Object[]{order.getId(),name,order.getDate()});
            }else{
                JOptionPane.showMessageDialog(this, "Order not found !");
                oidTxt.requestFocus();
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_searchBtnActionPerformed
    
    private void oidTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oidTxtActionPerformed
        searchBtn.doClick();
    }//GEN-LAST:event_oidTxtActionPerformed
    
    private void exiitBtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exiitBtActionPerformed
        dispose();
    }//GEN-LAST:event_exiitBtActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new ViewOrderForm(null, true).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ManageOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ManageOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ManageOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ManageOrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                ManageOrderForm dialog = new ManageOrderForm(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton addButton1;
    private javax.swing.JTextField amountText;
    private javax.swing.JTextField amountText1;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox codeCombo;
    private javax.swing.JComboBox codeCombo1;
    private javax.swing.JTextField custIDTxt;
    private javax.swing.JTextField custIDTxt1;
    private javax.swing.JLabel dateLbl;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JTextField descriptionText;
    private javax.swing.JTextField descriptionText1;
    private javax.swing.JButton enterBtn;
    private javax.swing.JButton exiitBt;
    private javax.swing.JButton exitBtn;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton exitButton1;
    private javax.swing.JTable itemTable;
    private javax.swing.JTable itemTable1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nameText;
    private javax.swing.JTextField nameText1;
    private javax.swing.JTextField oidTxt;
    private javax.swing.JTable orderDetailTbl;
    private javax.swing.JTable orderDetailTbl1;
    private javax.swing.JTextField orderIdText;
    private javax.swing.JTextField orderIdText1;
    private javax.swing.JTable orderTbl;
    private javax.swing.JTable orderTbl1;
    private javax.swing.JTextField qtyOnHandText;
    private javax.swing.JTextField qtyOnHandText1;
    private javax.swing.JTextField qtyText;
    private javax.swing.JTextField qtyText1;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton removeButton1;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField unitPriceText;
    private javax.swing.JTextField unitPriceText1;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
    
    private void fillCodeCombo() throws ClassNotFoundException, SQLException{
        ArrayList<Item> allItems = itemController.getAllItems();
        for (Item item : allItems) {
            codeCombo.addItem(item.getCode());
            codeCombo1.addItem(item.getCode());
        }
    }
    private void fillOrderTbl(){
        orderDTM.setRowCount(0);
        try {
            ArrayList<Order> allOrders = orderController.getAllOrders();
            for (Order allOrder : allOrders) {
                String name = customerController.searchCustomer(allOrder.getCustomerId()).getName();
                orderDTM.addRow(new Object[]{allOrder.getId(),name,allOrder.getDate()});
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ManageOrderForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
}
